================================Detailed Explanation of Erros and Its solution================================
1.when i created a rails project(in my case) :
	
	commmand applied : rails new simple_cms -d postgresql
	

Error : An error occurred while installing pg (1.2.3), and Bundler cannot continue.
Make sure that `gem install pg -v '1.2.3' --source 'https://rubygems.org/'` succeeds before bundling.

In Gemfile:
  pg
         run  bundle binstubs bundler
Could not find gem 'pg (~> 1.1)' in rubygems repository https://rubygems.org/ or installed locally.
The source does not contain any versions of 'pg'
       rails  webpacker:install
Could not find gem 'pg (~> 1.1)' in rubygems repository https://rubygems.org/ or installed locally.
The source does not contain any versions of 'pg'
Run `bundle install` to install missing gems.

	solution : 1. run :	sudo apt-get install libpq-dev
	           2. run :	bundle install // bcs project already created no need to create again simple install webpacker as shown below
		   3. run :	rails webpacker:install
		   4. run : 	rails server // it will start running
2.not able to connect with the database :
	command  : rails db:create
	
	Error explanation : 

FATAL:  Peer authentication failed for user "aman"
Couldn't create 'simple_cms_development' database. Please check your configuration.
rails aborted!
ActiveRecord::ConnectionNotEstablished: FATAL:  Peer authentication failed for user "aman"
/home/beryl/Desktop/Training/rails/simple_cms/bin/rails:5:in `<top (required)>'
/home/beryl/Desktop/Training/rails/simple_cms/bin/spring:10:in `block in <top (required)>'
/home/beryl/Desktop/Training/rails/simple_cms/bin/spring:7:in `<top (required)>'

Caused by:
PG::ConnectionBad: FATAL:  Peer authentication failed for user "aman"
/home/beryl/Desktop/Training/rails/simple_cms/bin/rails:5:in `<top (required)>'
/home/beryl/Desktop/Training/rails/simple_cms/bin/spring:10:in `block in <top (required)>'
/home/beryl/Desktop/Training/rails/simple_cms/bin/spring:7:in `<top (required)>'
Tasks: TOP => db:create
(See full trace by running task with --trace)

	solution : uncommented the port: 5432  host and make sure you entered the right password of database user in file database.yml 



3.data type error : error was generated when run command of genration migration.
	command applied : rails db:migrate
	Error explanation:
	
== 20211109112006 DoNothingYet: migrating =====================================
== 20211109112006 DoNothingYet: migrated (0.0000s) ============================

rails aborted!
SyntaxError: /home/beryl/Desktop/Training/rails/simple_cms/db/migrate/20211109113538_create_users.rb:4: syntax error, unexpected symbol literal, expecting `do' or '{' or '('
      t.String,last_name :first_name
                         ^
/home/beryl/Desktop/Training/rails/simple_cms/bin/rails:5:in `<top (required)>'
/home/beryl/Desktop/Training/rails/simple_cms/bin/spring:10:in `block in <top (required)>'
/home/beryl/Desktop/Training/rails/simple_cms/bin/spring:7:in `<top (required)>'
Tasks: TOP => db:migrate
(See full trace by running task with --trace)
	

solution : 
class CreateUsers < ActiveRecord::Migration[6.1]
  def change
    create_table :users do |t|
      t.String :last_name   // change t.String to t.string 
      t.String :first_name  // change t.String to t.string 
      t.String :email       // change t.String to t.string 

      t.timestamps # generated automatically which tells created_at and updated_at
    end
  end
end
------------------------------------------------10th Nov-----------------------------------------------------------------
4.No method error:

command:  user.update(name: 'Dave')
Error explanation: 

(irb):101:in `<main>': undefined method `update' for nil:NilClass (NoMethodError)
3.0.2 :102 > 

solution : error was due to the "user" which i was run with non matching column value i.e empty class value thats why it was showing nilclass (NoMthodError)
see below :

3.0.2 :100 > user = User.find_by(first_name: "komal")
  User Load (0.7ms)  SELECT "users".* FROM "users" WHERE "users"."first_name" = $1 LIMIT $2  [["first_name", "komal"], ["LIMIT", 1]]
 => nil 

3.0.2 :106 > user
 => nil 
-----------------------------------------------13th Nov-------------------------------------------------------------------
5.Raising Validation error:

Error Explanation:

p= Post.new(title:"Buy Game Stocks",content:"get rich").save!
/home/beryl/.rvm/gems/ruby-3.0.2/gems/activerecord-6.1.4.1/lib/active_record/validations.rb:80:in `raise_validation_error': Validation failed: Author must exist, Category must exist (ActiveRecord::RecordInvalid)
 => false 
 
 solution : 
 class Post < ApplicationRecord
    #belongs to both author and Categories.
    belongs_to:author ,optional: true

    #post.authorr // read the author that post belongs to
    #post.authorr // set the author that post belongs to
    belongs_to:category,optional: true


I found out a solution to the problem "Validation failed: Class must exist" and it's better than use:

belongs_to :city, optional: true

    4.1.2.11 :optional

    If you set the :optional option to true, then the presence of the associated object won't be validated. By default, this option is set to false.


 

