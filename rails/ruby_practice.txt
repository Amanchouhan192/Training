=================================Ruby Practice===========================================
-------Array--------------------------
3.0.2 :001 > [0, 1, 1, 2, 1, 1, 3, 1, 1].difference([1]) # => [0, 2, 3]
 => [0, 2, 3] 
3.0.2 :002 > a0 = [:foo, 'bar', 2]
 => [:foo, "bar", 2] 
3.0.2 :003 > a0.eql?(a0)
 => true 
3.0.2 :004 > a = [:foo, 'bar', 2]
 => [:foo, "bar", 2] 
3.0.2 :005 > a.join
 => "foobar2" 
3.0.2 :006 > a.join('a')
 => "fooabara2" 
3.0.2 :007 > a
 => [:foo, "bar", 2] 
3.0.2 :008 > a.last(2)
 => ["bar", 2] 
3.0.2 :009 > a.last(1)
 => [2] 
3.0.2 :010 > a.length
 => 3 
3.0.2 :011 > [1,2,3,578,8].minmax
 => [1, 578] 
3.0.2 :012 > [nil,false].none?
 => true 
3.0.2 :013 > a = [0, 1, 2]
 => [0, 1, 2] 
3.0.2 :014 > a.repeated_combination(1) {|combination| p combination }
[0]
[1]
[2]
 => [0, 1, 2] 
3.0.2 :015 > a = ['foo', 'bar', 'two']
 => ["foo", "bar", "two"] 
3.0.2 :016 > a.reverse
 => ["two", "bar", "f
 3.0.2 :001 > ary  =  Array.new
3.0.2 :002 > ary  = [1,2,3,4,5]
 => [1, 2, 3, 4, 5] 
3.0.2 :003 > ary.sort
 => [1, 2, 3, 4, 5] 
3.0.2 :004 > a = Array.new(5)
3.0.2 :005 > a = Array.new(5,true)
3.0.2 :006 > Array.new(4) {Hash.new}
3.0.2 :007 > Array.new(4){|i| i.to_s}
3.0.2 :008 > empty_table = Array.new(3){Array.new(3)}
3.0.2 :009 > Array({:a => "a", :b => "b"})
 => [[:a, "a"], [:b, "b"]] 
3.0.2 :010 > array = Array.new
 => [] 
3.0.2 :011 > array = [2,3,4,6,7,8,9,10]
3.0.2 :012 > array.sort
3.0.2 :013 > array[2]
 => 4 
3.0.2 :014 > array.at(3)
 => 6 
3.0.2 :015 > array.fetch(3)
3.0.2 :016 > array.take(3)
3.0.2 :017 > array.drop(1)
3.0.2 :018 > browser= ['chrome','Firefox','safari','opera','IE']
3.0.2 :019 > browser.length
3.0.2 :020 > browser.cuount
Did you mean?  count
	from /home/beryl/.rvm/rubies/ruby-3.0.2/bin/irb:23:in `load'
3.0.2 :021 > browser.count
3.0.2 :022 > browser.empty?
3.0.2 :023 > browser.include?('chrome')
3.0.2 :024 > browser.include?('Explorer')
3.0.2 :025 > array.unshoft(0)
Did you mean?  unshift
	from /home/beryl/.rvm/rubies/ruby-3.0.2/bin/irb:23:in `load'
3.0.2 :026 > array.unshift(0)
3.0.2 :027 > arr.insert(3,'a')
Did you mean?  ary
	from /home/beryl/.rvm/rubies/ruby-3.0.2/bin/irb:23:in `load'
3.0.2 :028 > array
 => [0, 2, 3, 4, 6, 7, 8, 9, 10] 
 => 10 
 => [0, 2, 3, 4, 6, 7, 8, 9] 
 => 0 
3.0.2 :032 > array
3.0.2 :033 > array.delete_at(2)
 => 4 
3.0.2 :034 > array
 => [2, 3, 6, 7, 8, 9] 
3.0.2 :035 > arr = ['foo', 0, nil, 'bar', 7, 'baz', nil]
 => ["foo", 0, nil, "bar", 7, "baz", nil] 
3.0.2 :036 > arr.compact
3.0.2 :037 > arr.compact!
3.0.2 :038 > arr
3.0.2 :039 > arr = [2, 5, 6, 556, 6, 6, 8, 9, 0, 123, 556]
3.0.2 :040 > arr.uniq
3.0.2 :041 > array = [1,2,3,4,5]
3.0.2 :042 > array.each {|a| print a -= 10," "}
3.0.2 :043 > words = %w[first second third fourth fifth sixth]
3.0.2 :044 > str= ""
3.0.2 :045 > words.reverse_each{|word| str+="#{word}"}
3.0.2 :046 > p str
 => "sixthfifthfourththirdsecondfirst" 
 => ["first", "second", "third", "fourth", "fifth", "sixth"] 
 => ["first", "second", "third", "fourth", "fifth", "sixth"] 
"sixthfifthfourththirdsecondfirstsixth fifth fourth third second first "
3.0.2 :050 > ar
Did you mean?  ary
               a
	from /home/beryl/.rvm/rubies/ruby-3.0.2/bin/irb:23:in `load'
3.0.2 :051 > arr
 => [2, 5, 6, 556, 6, 6, 8, 9, 0, 123, 556] 
 => [4, 10, 12, 1112, 12, 12, 16, 18, 0, 246, 1112] 
 => [1, 2, 3, 4, 5, 6] 
 => [4, 5, 6] 
 => [3, 4, 5, 6] 
 => [4, 5, 6] 
 => [4, 5, 6] 
 => [4, 5, 6] 
 => [1, 2, 3, 4, 5, 6] 
 => [1, 2, 3] 
 => ["Element 0", "Element 1", "Element 2"] 
 => [] 
 => [1, 2] 
 => ["x", "y"] 
 => ["x", "y", "x", "y", "x", "y"] 
 => "beryl" 
 => [] 
3.0.2 :068 > arr.each { |a| str+=gets.to_s}
 => [] 
3.0.2 :069 > a = gets.to_s
aman
3.0.2 :070 > str
 => "beryl" 
 => true 
3.0.2 :072 > [0,1,2].any? {|element| element > 2 }
 => false 
3.0.2 :073 > ['food', 'drink'].any?(/foo/)
 => true 
3.0.2 :074 > ['food', 'drink'].any?("foo")
 => false 
3.0.2 :075 > ['food', 'drink'].any?(/foo/)
 => true 
3.0.2 :076 > ['food', 'drink'].any?(/f/)
 => true 
3.0.2 :077 > ['food', 'drink'].any?(/fd/)
 => false 
3.0.2 :078 > a = [0, 4, 7, 10, 12]
 => [0, 4, 7, 10, 12] 
3.0.2 :079 > a.bsearch{ |x| x >= 4}
 => 4 
3.0.2 :080 > a.bsearch{ |x| x >= 100}
 => nil 
3.0.2 :081 > a = [:foo, 'bar', 2]
 => [:foo, "bar", 2] 
3.0.2 :082 > a1 = a.map {|element| element.class }
 => [Symbol, String, Integer] 
3.0.2 :083 > a1
 => [Symbol, String, Integer] 
3.0.2 :084 > a = [0,1,2]
 => [0, 1, 2] 
3.0.2 :085 > a.combination { |combination| p combination}
(irb):85:in `combination': wrong number of arguments (given 0, expected 1) (ArgumentError)
	from (irb):85:in `<main>'
	from /home/beryl/.rvm/rubies/ruby-3.0.2/lib/ruby/gems/3.0.0/gems/irb-1.3.5/exe/irb:11:in `<top (required)>'
	from /home/beryl/.rvm/rubies/ruby-3.0.2/bin/irb:23:in `load'
	from /home/beryl/.rvm/rubies/ruby-3.0.2/bin/irb:23:in `<main>'
3.0.2 :086 > a.combination(3) { |combination| p combination}
[0, 1, 2]
 => [0, 1, 2] 
3.0.2 :087 > a.combination(2) { |combination| p combination}
[0, 1]
[0, 2]
[1, 2]
 => [0, 1, 2] 
3.0.2 :088 > 

-------------------string----------------------------
3.0.2 :001 > #---------string-------------------
 => nil 
3.0.2 :002 > s = String.new
 => "" 
3.0.2 :003 > s
 => "" 
3.0.2 :004 > "Ho "*3
 => "Ho Ho Ho " 
3.0.2 :005 > "Ho! "*3
 => "Ho! Ho! Ho! " 
3.0.2 :012 > "hello".byteslice(1...3)
3.0.2 :013 > "hello".capitalize
3.0.2 :014 > "hello".capitalize!
3.0.2 :015 > 'foo'.casecmp('foo')
3.0.2 :016 > 'foo'.casecmp('fo')
3.0.2 :017 > 'foo'.casecmp('fooo')
3.0.2 :018 > 'foo'.casecmp('fooO')
 => -1 
3.0.2 :019 > 'foO'.casecmp('fooO')
 => -1 
 => 0 
 => true 
 => nil 
 => "       hello        " 
(irb):24:in `center': no implicit conversion of Integer into String (TypeError)
	from /home/beryl/.rvm/rubies/ruby-3.0.2/lib/ruby/gems/3.0.0/gems/irb-1.3.5/exe/irb:11:in `<top (required)>'
	from /home/beryl/.rvm/rubies/ruby-3.0.2/bin/irb:23:in `<main>'
3.0.2 :025 > "hello".center(20,'123')
 => "1231231hello12312312" 
3.0.2 :026 > "hello\n".chomp
 => "hello" 
3.0.2 :027 > "hello\r".chomp
 => "hello" 
3.0.2 :028 > "hello\r\n".chomp
 => "hello" 
3.0.2 :029 > "hello\n\r".chomp
 => "hello\n" 
3.0.2 :030 > "string\n".chop
 => "string" 
3.0.2 :031 > "string\n\r".chop
 => "string\n" 
3.0.2 :032 > "string\r\r".chop
 => "string\r" 
3.0.2 :033 > "string\r\n".chop
 => "string" 
3.0.2 :034 > a.chr
(irb):34:in `<main>': undefined local variable or method `a' for main:Object (NameError)
	from /home/beryl/.rvm/rubies/ruby-3.0.2/lib/ruby/gems/3.0.0/gems/irb-1.3.5/exe/irb:11:in `<top (required)>'
	from /home/beryl/.rvm/rubies/ruby-3.0.2/bin/irb:23:in `load'
	from /home/beryl/.rvm/rubies/ruby-3.0.2/bin/irb:23:in `<main>'
3.0.2 :035 > a = "String"
 => "String" 
3.0.2 :036 > a.clear
 => "" 
3.0.2 :037 > s = "foo"
 => "foo" 
3.0.2 :038 > s.concat('bar','baz')
 => "foobarbaz" 
3.0.2 :039 > a = "HelloWolrd"
 => "HelloWolrd" 
3.0.2 :040 > a.count "ol"
 => 5 
3.0.2 :041 > "foo".crypt("$5$rounds=1000$salt$")

---------------------------Time-----------------------------------------------

3.0.2 :027 > time = Time.new
3.0.2 :028 > time.tuesday?
3.0.2 :030 > time.wednesday?
 => 2002-10-01 00:00:00 +0530 
3.0.2 :034 > Time.new(2002, 10, 31, 2, 2, 2, "+02:00") #=> 2002-10-31 02:02:02 +
3.0.2 :035 > Time.at(0)
3.0.2 :036 > Time.at(Time.at(0))
 => 2000-01-01 10:30:00 +0530 
 => 200000 
 => 123456789 
 => 2020-02-26 21:58:19 +0900 
TC
 => 2020-02-26 12:58:19 UTC 
3.0.2 :044 > Time.at(1582721899, in: "C")              #=> 2020-02-26 13:58:19 +
0300
 => 2020-02-26 15:58:19 +0300 
 => 2000-01-01 20:15:01 +0530 
 => 2021-12-15 15:56:36.984287599 +0530 
3.0.2 :047 > b = Time.new
 => 2021-12-15 15:56:40.722831937 +0530 
3.0.2 :048 > a == b
 => false 
 => -3.738544338 
 => 2008-06-21 13:30:00 +0900 
 => 2021-12-15 15:59:44.28633472 +0530 
 => 2000-01-01 20:15:01 UTC 
 => 2000-01-01 20:15:01 UTC 
(irb):54:in `<main>': undefined local variable or method `t' for main:Object (NameError)
	from /home/beryl/.rvm/rubies/ruby-3.0.2/bin/irb:23:in `load'
3.0.2 :055 > t = Time.new
3.0.2 :056 > t + (60 * 60 * 24)
3.0.2 :057 > t = Time.now
3.0.2 :058 > t = Time.now
3.0.2 :059 > t <=> t2
Did you mean?  t
	from /home/beryl/.rvm/rubies/ruby-3.0.2/bin/irb:23:in `load'
3.0.2 :060 > t = Time.now
3.0.2 :061 > t <=> t2
Did you mean?  t
	from /home/beryl/.rvm/rubies/ruby-3.0.2/bin/irb:23:in `load'
3.0.2 :062 > t = Time.now
3.0.2 :063 > t2 = Time.now
 => 2021-12-15 16:05:28.503470371 +0530 
3.0.2 :064 > t <=> t2
 => -1 
3.0.2 :065 > t2 <=> t
3.0.2 :066 > t.nsec
3.0.2 :067 > t2.nsec
3.0.2 :068 > Time.now.asctime
3.0.2 :069 > Time.now.ctime
3.0.2 :070 > t = Time.utc(2010,3,30, 5,43,25.0123456789r)
3.0.2 :071 > t
3.0.2 :072 > t.ceil
3.0.2 :073 > t.ceil(0)
3.0.2 :074 > t.ceil(1)
3.0.2 :075 > t.ceil(2)
3.0.2 :076 > t.ceil(3)
3.0.2 :077 > t.ceil(4)
3.0.2 :078 > Time.now.asctime 
3.0.2 :079 > Time.now.ctime
3.0.2 :080 > t = Time.now
3.0.2 :081 > t.mdat
Did you mean?  mday
	from /home/beryl/.rvm/rubies/ruby-3.0.2/bin/irb:23:in `load'
3.0.2 :082 > t.mday
3.0.2 :083 > t.yday
3.0.2 :084 > t = Time.local(1987, 12, 18)
3.0.2 :085 > t.friday?
3.0.2 :086 > t = Time.local(2000,1,1,20,15,1)
3.0.2 :087 > t.gmt?
3.0.2 :088 > y = t.getgm
3.0.2 :089 > t = Time.utc(2000,1,1,20,15,1)
3.0.2 :090 > t.utc
3.0.2 :091 > t.utc?
3.0.2 :092 > t = Time.gm(2000,1,1,20,15,1)
3.0.2 :093 > t.gmt_offset 
3.0.2 :094 > t = Time.gm(2000,1,1,20,15,1)
3.0.2 :095 > t.gmt_offset  
3.0.2 :096 > l = t.getlocal
3.0.2 :097 > l.gmt_offset 
 => 19800 
3.0.2 :098 > t = Time.now
 => 2021-12-15 16:22:41.18778027 +0530 
3.0.2 :099 > t.hour
 => 16 
3.0.2 :100 > t.localtime 
 => 2021-12-15 16:22:41.18778027 +0530 
3.0.2 :101 > t.day
 => 15 
3.0.2 :102 > t.mon
 => 12 
3.0.2 :103 > t.month
 => 12 
3.0.2 :104 > t = Time.local(2006, 6, 10)
 => 2006-06-10 00:00:00 +0530 
3.0.2 :105 > 
^C
3.0.2 :105 > t.saturday?
 => true 
3.0.2 :106 > t = Time.new
 => 2021-12-15 16:53:26.403327714 +0530 
3.0.2 :107 > t = Time.now
 => 2021-12-15 16:53:31.250006272 +0530 
3.0.2 :108 > t.subsec 
 => (976587/3906250) 
3.0.2 :109 > t = Time.now
 => 2021-12-15 16:54:06.10112027 +0530 
3.0.2 :110 > t.to_i 
 => 1639567446 
3.0.2 :111 > t = Time.gm(2000, "jan", 1, 20, 15, 1)
 => 2000-01-01 20:15:01 UTC 
3.0.2 :112 > t.zone
 => "UTC" 
3.0.2 :113 > t = Time.local(2000, "jan", 1, 20, 15, 1)
 => 2000-01-01 20:15:01 +0530 
3.0.2 :114 > t.zone
 => "IST" 
3.0.2 :115 > 

---------------------------------Hash----------------------------------------------------------


