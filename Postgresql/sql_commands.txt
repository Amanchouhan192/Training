============================================SQL COMMANDS====================================
1.Postresql start from the Terminal:
      step 1. sudo su postgres
      step 2. psql
      step 3. Enter password ("root" by default)
      step 4. you will get postgres# prompt visible on the termianl


2.\l : to see the default and available data base.
	
	syntax : \l
	output :          
                              List of databases
             Name              |  Owner   | Encoding | Collate | Ctype |   Access privileges   
-------------------------------+----------+----------+---------+-------+-----------------------
 Airlines_development          | postgres | UTF8     | en_IN   | en_IN | 
 checkmate_pos_development     | postgres | UTF8     | en_IN   | en_IN | 
 employee_api_development      | postgres | UTF8     | en_IN   | en_IN | 
 employee_development          | postgres | UTF8     | en_IN   | en_IN | 
 employee_management           | postgres | UTF8     | en_IN   | en_IN | 
 employee_test                 | postgres | UTF8     | en_IN   | en_IN | 
 itsacheckmate_development     | postgres | UTF8     | en_IN   | en_IN | 
 login_development             | postgres | UTF8     | en_IN   | en_IN | 
 netgym_development            | postgres | UTF8     | en_IN   | en_IN | 
 netgym_test                   | postgres | UTF8     | en_IN   | en_IN | 
 postgres                      | postgres | UTF8     | en_IN   | en_IN | 
 rest_api_employee_development | postgres | UTF8     | en_IN   | en_IN | 
 scaff_development             | postgres | UTF8     | en_IN   | en_IN | 
 scaff_test                    | postgres | UTF8     | en_IN   | en_IN | 
 template0                     | postgres | UTF8     | en_IN   | en_IN | =c/postgres          +
                               |          |          |         |       | postgres=CTc/postgres
 template1                     | postgres | UTF8     | en_IN   | en_IN | =c/postgres          +
                               |          |          |         |       | postgres=CTc/postgres
 test                          | postgres | UTF8     | en_IN   | en_IN | 
(17 rows)


3.\du : for deault users.
	
 Role name |                         Attributes                         | Member of 
-----------+------------------------------------------------------------+-----------
 postgres  | Superuser, Create role, Create DB, Replication, Bypass RLS | {}
 user_1    |                                                            | {}

4. Alter the user with password :

	syntax : ALTER USER <USER NAME> WITH PASSWORD <PASSWORD>
	output:  ALTER USER postgres WITH PASSWORD test123

5.Make superuser : to make a super user.
	syntax : ALTER USER <USER> WITH SUPERUSER
	output:  ALTER USER user_1 WITH SUPERUSER

6.\q : for quit the postgres.
	syntax : \q

7.\? : for help
	syntax : \?

8.creation of data base :
	syntax : CRAETE DATABASE  <DATABASE NAME>
	output:  CRAETE DATABASE  test

	 test                          | postgres | UTF8     | en_IN   | en_IN | 

9.psql --help : this is for help.
	syntax : psql --help

10. \c : for connect the data base with the server and it is used to switch between the database too.
	
	syntax : \c <database name>
	output: \c test
	
	postgres=# \c test
	psql (14.0 (Ubuntu 14.0-1.pgdg18.04+1), server 11.13 (Ubuntu 11.13-1.pgdg18.04+1))
	You are now connected to database "test" as user "postgres".

11.DROP : Drop database command is the dangerous command it delete the whole data base in one go.
	
	syntax : DROP DATABASE <database name>

12.Create a Table : for create a table in the database .
	syntax : CREATE TABLE <table_name>(
		column name + data + constraints if any
)


output: postgres=# CREATE TABLE employee(
id  BIGSERIAL NOT NULL PRIMARY KEY,
first_name VARCHAR(50) NOT NULL,
last_name VARCHAR(50) NOT NULL,
gender VARCHAR(7) NOT NULL,
date_of_birth DATE NOT NULL,
email VARCHAR(150));
CREATE TABLE

13. \d : to see the list of  table or schema.
	syntax :\d 
	output:

	           List of relations
 Schema |          Name           |   Type   |  Owner   
--------+-------------------------+----------+----------
 public | person                  | table    | postgres
 public | person_id_seq           | sequence | postgres
 public | student                 | table    | postgres
 public | student_roll_number_seq | sequence | postgres
(4 rows)


14.\d tablename : to see the table overview.

	syntax : \d <table name>
	output n: \d person
	
	test=# \d person;
                                       Table "public.person"
    Column     |          Type          | Collation | Nullable |              Default               
---------------+------------------------+-----------+----------+------------------------------------
 id            | bigint                 |           | not null | nextval('person_id_seq'::regclass)
 first_name    | character varying(50)  |           | not null | 
 last_name     | character varying(50)  |           | not null | 
 gender        | character varying(7)   |           | not null | 
 date_of_birth | date                   |           | not null | 
 email         | character varying(150) |           |          | 
Indexes:
    "person_pkey" PRIMARY KEY, btree (id)


15.ctrl + l : to clear the screen .

	syntax : ctrl + l


16.Display the table :

	syntax : SELECT *FROM <table name> ;

postgres=# SELECT *FROM person ;
 id | first_name | last_name | gender | date_of_birth | email 
----+------------+-----------+--------+---------------+-------
  1 | Aman       | Chouhan   | MALE   | 1997-12-28    | amanchouhan192@gmail.com
  2 | Ankansha   | sharma    | FEMALE | 1998-11-28    | 
  3 | Niharika   | kumari    | FEMALE | 1999-09-20    | 
  4 | Kunal      | kumar     | MALE   | 1999-09-11    | 
  5 | Neha       | Nagar     | FEMALE | 1997-12-28    | 
(5 rows)

===========================================================================================================================

17.\dt : show only the list of table or relation no other things (like id_seq kinf of things)

	syntax : \dt 
	output : 
	
	postgres=# \dt
          List of relations
 Schema |   Name   | Type  |  Owner   
--------+----------+-------+----------
 public | employee | table | postgres
 public | person   | table | postgres
 public | student  | table | postgres
(3 rows)

18. To see the particular column(s):
	syntax :    
			SELECT <Column name 1>,<column name 2>, soon..  FROM <table name>	
	output:         

postgres=# SELECT first_name ,last_name FROM student;
 first_name | last_name 
------------+-----------
 Anne       | smith
 kunal      | kumar
 Anisha     | kumari
 Parul      | sharma
 kishor     | sharma
 shefali    | Malhotra
 parakriti  | agarwal
 rohit      | sharma
 prithvi    | chouhan
 Agni       | chouhan
(10 rows)


19.ORDER BY : ORDER BY clause is used to sort the data in ascending or descending order, based on one or more columns.

		syntax : SELECT column-list
			FROM table_name
			[WHERE condition]
			[ORDER BY column1, column2, .. columnN] [ASC | DESC];


		output :
		
postgres=# SELECT *FROM  student ORDER BY first_name;
 roll_number | first_name | last_name | gender | date_of_birth |        email         
-------------+------------+-----------+--------+---------------+----------------------
          10 | Agni       | chouhan   | FEMALE | 1999-02-28    | agni@gmail.com
           3 | Anisha     | kumari    | FEMALE | 1999-12-08    | k.anisha@gmail.com
           1 | Anne       | smith     | FEMALE | 1998-01-09    | anne@gmail.com
           5 | kishor     | sharma    | MALE   | 1999-08-08    | s.kishor@gmail.com
           2 | kunal      | kumar     | MALE   | 1999-01-09    | kunalk@gmail.com
           7 | parakriti  | agarwal   | FEMALE | 1995-03-08    | prak.a@gmail.com
           4 | Parul      | sharma    | FEMALE | 1997-12-01    | parul.s@gmail.com
           9 | prithvi    | chouhan   | MALE   | 1999-12-28    | prithviraj@gmail.com
           8 | rohit      | sharma    | MALE   | 1996-10-08    | rohits@gmail.com
           6 | shefali    | Malhotra  | FEMALE | 1999-11-08    | shef@gmail.com
(10 rows)

postgres=# SELECT *FROM  student ORDER BY first_name DESC;
 roll_number | first_name | last_name | gender | date_of_birth |        email         
-------------+------------+-----------+--------+---------------+----------------------
           6 | shefali    | Malhotra  | FEMALE | 1999-11-08    | shef@gmail.com
           8 | rohit      | sharma    | MALE   | 1996-10-08    | rohits@gmail.com
           9 | prithvi    | chouhan   | MALE   | 1999-12-28    | prithviraj@gmail.com
           4 | Parul      | sharma    | FEMALE | 1997-12-01    | parul.s@gmail.com
           7 | parakriti  | agarwal   | FEMALE | 1995-03-08    | prak.a@gmail.com
           2 | kunal      | kumar     | MALE   | 1999-01-09    | kunalk@gmail.com
           5 | kishor     | sharma    | MALE   | 1999-08-08    | s.kishor@gmail.com
           1 | Anne       | smith     | FEMALE | 1998-01-09    | anne@gmail.com
           3 | Anisha     | kumari    | FEMALE | 1999-12-08    | k.anisha@gmail.com
          10 | Agni       | chouhan   | FEMALE | 1999-02-28    | agni@gmail.com
(10 rows)

postgres=# SELECT *FROM  student ORDER BY first_name;
 roll_number | first_name | last_name | gender | date_of_birth |        email         
-------------+------------+-----------+--------+---------------+----------------------
          10 | Agni       | chouhan   | FEMALE | 1999-02-28    | agni@gmail.com
           3 | Anisha     | kumari    | FEMALE | 1999-12-08    | k.anisha@gmail.com
           1 | Anne       | smith     | FEMALE | 1998-01-09    | anne@gmail.com
           5 | kishor     | sharma    | MALE   | 1999-08-08    | s.kishor@gmail.com
           2 | kunal      | kumar     | MALE   | 1999-01-09    | kunalk@gmail.com
           7 | parakriti  | agarwal   | FEMALE | 1995-03-08    | prak.a@gmail.com
           4 | Parul      | sharma    | FEMALE | 1997-12-01    | parul.s@gmail.com
           9 | prithvi    | chouhan   | MALE   | 1999-12-28    | prithviraj@gmail.com
           8 | rohit      | sharma    | MALE   | 1996-10-08    | rohits@gmail.com
           6 | shefali    | Malhotra  | FEMALE | 1999-11-08    | shef@gmail.com
(10 rows)

postgres=# SELECT *FROM  student ORDER BY id ASC;
ERROR:  column "id" does not exist
LINE 1: SELECT *FROM  student ORDER BY id ASC;
                                       ^
postgres=# SELECT *FROM  student ORDER BY roll_number ASC;
 roll_number | first_name | last_name | gender | date_of_birth |        email         
-------------+------------+-----------+--------+---------------+----------------------
           1 | Anne       | smith     | FEMALE | 1998-01-09    | anne@gmail.com
           2 | kunal      | kumar     | MALE   | 1999-01-09    | kunalk@gmail.com
           3 | Anisha     | kumari    | FEMALE | 1999-12-08    | k.anisha@gmail.com
           4 | Parul      | sharma    | FEMALE | 1997-12-01    | parul.s@gmail.com
           5 | kishor     | sharma    | MALE   | 1999-08-08    | s.kishor@gmail.com
           6 | shefali    | Malhotra  | FEMALE | 1999-11-08    | shef@gmail.com
           7 | parakriti  | agarwal   | FEMALE | 1995-03-08    | prak.a@gmail.com
           8 | rohit      | sharma    | MALE   | 1996-10-08    | rohits@gmail.com
           9 | prithvi    | chouhan   | MALE   | 1999-12-28    | prithviraj@gmail.com
          10 | Agni       | chouhan   | FEMALE | 1999-02-28    | agni@gmail.com
(10 rows)


20.Distinct : It is used to eliminate all the duplicate records and fetching only unique records.
	
	syntax : SELECT DISTINCT column1, column2,.....columnN
		 FROM table_name
		 WHERE [condition]

	output:  postgres=# SELECT DISTINCT first_name,last_name FROM student WHERE gender='FEMALE';
 first_name | last_name 
------------+-----------
 Agni       | chouhan
 Anisha     | kumari
 Anne       | smith
 parakriti  | agarwal
 Parul      | sharma
 shefali    | Malhotra
(6 rows)


21.WHERE : WHERE clause is used to specify a condition while fetching the data from single table or joining with multiple tables.		

	syntax : SELECT column1, column2, columnN
	         FROM table_name
	         WHERE [search_condition]

	output : postgres=# SELECT * FROM student WHERE last_name ='sharma';
 roll_number | first_name | last_name | gender | date_of_birth |       email        
-------------+------------+-----------+--------+---------------+--------------------
           4 | Parul      | sharma    | FEMALE | 1997-12-01    | parul.s@gmail.com
           5 | kishor     | sharma    | MALE   | 1999-08-08    | s.kishor@gmail.com
           8 | rohit      | sharma    | MALE   | 1996-10-08    | rohits@gmail.com
(3 rows)


postgres=# SELECT * FROM student WHERE last_name ='sharma' OR  last_name = 'chouhan';
 roll_number | first_name | last_name | gender | date_of_birth |        email         
-------------+------------+-----------+--------+---------------+----------------------
           4 | Parul      | sharma    | FEMALE | 1997-12-01    | parul.s@gmail.com
           5 | kishor     | sharma    | MALE   | 1999-08-08    | s.kishor@gmail.com
           8 | rohit      | sharma    | MALE   | 1996-10-08    | rohits@gmail.com
           9 | prithvi    | chouhan   | MALE   | 1999-12-28    | prithviraj@gmail.com
          10 | Agni       | chouhan   | FEMALE | 1999-02-28    | agni@gmail.com
(5 rows)


22: Comparison Operator : comparison operator compare two condition and return answer in the form of true or false.

	output : 
postgres=# SELECT 1<2;;
 ?column? 
----------
 t
(1 row)

postgres=# SELECT 2<2;;
 ?column? 
----------
 f
(1 row)

postgres=# SELECT 2!=2;
 ?column? 
----------
 f
(1 row)

23. LIMIT : LIMIT clause is used to limit the data amount returned by the SELECT statement.

	syntax : SELECT column1, column2, columnN
		 FROM table_name
		 LIMIT [no of rows]
	output: postgres=#  SELECT * FROM student LIMIT 5;
 roll_number | first_name | last_name | gender | date_of_birth |       email        
-------------+------------+-----------+--------+---------------+--------------------
           1 | Anne       | smith     | FEMALE | 1998-01-09    | anne@gmail.com
           2 | kunal      | kumar     | MALE   | 1999-01-09    | kunalk@gmail.com
           3 | Anisha     | kumari    | FEMALE | 1999-12-08    | k.anisha@gmail.com
           4 | Parul      | sharma    | FEMALE | 1997-12-01    | parul.s@gmail.com
           5 | kishor     | sharma    | MALE   | 1999-08-08    | s.kishor@gmail.com
(5 rows)

24. OFFSET : OFFSET is tell , where after the start from the row number.

	syntax : SELECT column1, column2, columnN
		 FROM table_name
                 LIMIT [no of rows] OFFSET [row num]

	Output: postgres=#  SELECT * FROM student LIMIT 5 OFFSET 5;
 roll_number | first_name | last_name | gender | date_of_birth |        email         
-------------+------------+-----------+--------+---------------+----------------------
           6 | shefali    | Malhotra  | FEMALE | 1999-11-08    | shef@gmail.com
           7 | parakriti  | agarwal   | FEMALE | 1995-03-08    | prak.a@gmail.com
           8 | rohit      | sharma    | MALE   | 1996-10-08    | rohits@gmail.com
           9 | prithvi    | chouhan   | MALE   | 1999-12-28    | prithviraj@gmail.com
          10 | Agni       | chouhan   | FEMALE | 1999-02-28    | agni@gmail.com
(5 rows)

25. fetch : it wil fetch or display first rows of the table.

	syntax :  SELECT * FROM <table name > OFFSET <row number> FETCH FIRST  <row number> ROW ONLY;
	
	output : postgres=# SELECT * FROM student OFFSET 5 FETCH FIRST  5 ROW ONLY;
 roll_number | first_name | last_name | gender | date_of_birth |        email         
-------------+------------+-----------+--------+---------------+----------------------
           6 | shefali    | Malhotra  | FEMALE | 1999-11-08    | shef@gmail.com
           7 | parakriti  | agarwal   | FEMALE | 1995-03-08    | prak.a@gmail.com
           8 | rohit      | sharma    | MALE   | 1996-10-08    | rohits@gmail.com
           9 | prithvi    | chouhan   | MALE   | 1999-12-28    | prithviraj@gmail.com
          10 | Agni       | chouhan   | FEMALE | 1999-02-28    | agni@gmail.com
(5 rows)

26.IN : combine results two or more arguments.
	syntax : IN ('Argument1','Argument2','Argument3'....soon)

output: postgres=# SELECT * FROM student WHERE last_name IN('sharma','chouhan','kumar');
 roll_number | first_name | last_name | gender | date_of_birth |        email         
-------------+------------+-----------+--------+---------------+----------------------
           2 | kunal      | kumar     | MALE   | 1999-01-09    | kunalk@gmail.com
           4 | Parul      | sharma    | FEMALE | 1997-12-01    | parul.s@gmail.com
           5 | kishor     | sharma    | MALE   | 1999-08-08    | s.kishor@gmail.com
           8 | rohit      | sharma    | MALE   | 1996-10-08    | rohits@gmail.com
           9 | prithvi    | chouhan   | MALE   | 1999-12-28    | prithviraj@gmail.com
          10 | Agni       | chouhan   | FEMALE | 1999-02-28    | agni@gmail.com
          13 | tarushee   | kumar     | FEMALE | 1996-02-07    | tarusee.k@gmail.com
(7 rows)

27.BETWEEN : it display the result in between the given range .

	syntax : BETWEEN 'start point data' AND 'end point data'
	
	output : postgres=# SELECT * FROM student WHERE date_of_birth BETWEEN DATE '1999-01-01' AND '2000-01-01';
 roll_number | first_name | last_name | gender | date_of_birth |        email         
-------------+------------+-----------+--------+---------------+----------------------
           2 | kunal      | kumar     | MALE   | 1999-01-09    | kunalk@gmail.com
           3 | Anisha     | kumari    | FEMALE | 1999-12-08    | k.anisha@gmail.com
           5 | kishor     | sharma    | MALE   | 1999-08-08    | s.kishor@gmail.com
           6 | shefali    | Malhotra  | FEMALE | 1999-11-08    | shef@gmail.com
           9 | prithvi    | chouhan   | MALE   | 1999-12-28    | prithviraj@gmail.com
          10 | Agni       | chouhan   | FEMALE | 1999-02-28    | agni@gmail.com
          17 | poonam     | pawar     | FEMALE | 1999-02-02    | poonam@gmail.com
          20 | diksha     | kapoor    | FEMALE | 1999-12-28    | diksha@gmail.com
          22 | roshni     | valya     | FEMALE | 1999-03-19    | roshni@gmail.com
(9 rows)


28.LIKE : it search the result by matching the pattern .

	syntax :LIKE 'pattern%'

	output : postgres=# SELECT * FROM student WHERE first_name LIKE 'A%'; 
 roll_number | first_name | last_name | gender | date_of_birth |       email        
-------------+------------+-----------+--------+---------------+--------------------
           1 | Anne       | smith     | FEMALE | 1998-01-09    | anne@gmail.com
           3 | Anisha     | kumari    | FEMALE | 1999-12-08    | k.anisha@gmail.com
          10 | Agni       | chouhan   | FEMALE | 1999-02-28    | agni@gmail.com
(3 rows)

postgres=# SELECT * FROM student WHERE first_name LIKE 'An%'; 
 roll_number | first_name | last_name | gender | date_of_birth |       email        
-------------+------------+-----------+--------+---------------+--------------------
           1 | Anne       | smith     | FEMALE | 1998-01-09    | anne@gmail.com
           3 | Anisha     | kumari    | FEMALE | 1999-12-08    | k.anisha@gmail.com
(2 rows)

postgres=# SELECT * FROM student WHERE first_name LIKE '%n'; 
 roll_number | first_name | last_name | gender | date_of_birth |       email       
-------------+------------+-----------+--------+---------------+-------------------
          11 | karan      | kashyap   | MALE   | 1998-01-07    | 
          12 | kiran      | prajapati | FEMALE | 1998-12-07    | kiran.p@gmail.com
          21 | rohan      |           | MALE   | 1996-01-28    | rohan@gmail.com
(3 rows)

postgres=# SELECT * FROM student WHERE first_name LIKE 'k%n'; 
 roll_number | first_name | last_name | gender | date_of_birth |       email       
-------------+------------+-----------+--------+---------------+-------------------
          11 | karan      | kashyap   | MALE   | 1998-01-07    | 
          12 | kiran      | prajapati | FEMALE | 1998-12-07    | kiran.p@gmail.com
(2 rows)

postgres=# SELECT * FROM student WHERE first_name LIKE 'k___n'; 
 roll_number | first_name | last_name | gender | date_of_birth |       email       
-------------+------------+-----------+--------+---------------+-------------------
          11 | karan      | kashyap   | MALE   | 1998-01-07    | 
          12 | kiran      | prajapati | FEMALE | 1998-12-07    | kiran.p@gmail.com
(2 rows)



29.ILIKE : The key word ILIKE can be used instead of LIKE to make the match case-insensitive.

	syntax : ILIKE 'R%'

	Output : 
postgres=# SELECT * FROM student WHERE first_name LIKE 'R%'; 
 roll_number | first_name | last_name | gender | date_of_birth | email 
-------------+------------+-----------+--------+---------------+-------
(0 rows)

postgres=# SELECT * FROM student WHERE first_name ILIKE 'R%'; 
 roll_number | first_name | last_name | gender | date_of_birth |      email       
-------------+------------+-----------+--------+---------------+------------------
           8 | rohit      | sharma    | MALE   | 1996-10-08    | rohits@gmail.com
          21 | rohan      |           | MALE   | 1996-01-28    | rohan@gmail.com
          22 | roshni     | valya     | FEMALE | 1999-03-19    | roshni@gmail.com
(3 rows)

30.GROUP BY :  used to arrange identical data into groups with the help of some functions

	syntax : postgres=# SELECT last_name,COUNT(*) FROM student GROUP BY last_name;
	output : 
 last_name | count 
-----------+-------
 valya     |     1
 kumari    |     1
 kumar     |     2
 prajapati |     1
 seshodiya |     2
 pawar     |     1
           |     1
 chouhan   |     2
 smith     |     1
 agarwal   |     1
 sobti     |     1
 Malhotra  |     1
 sharma    |     3
 heider    |     1
 kashyap   |     1
 kapoor    |     1
 kasyap    |     1
(17 rows)


31. HAVING : A HAVING clause in SQL specifies that an SQL SELECT statement must only return rows where aggregate values meet the specified conditions. 

	syntax : postgres=# SELECT date_of_birth,COUNT(*) FROM student GROUP BY date_of_birth HAVING COUNT(*) >1 ORDER BY date_of_birth;
	output: 
 date_of_birth | count 
---------------+-------
 1999-12-28    |     2
(1 row)

32. ALTER TABLE : used to alter the table i just add the columhns.
	
	syntax :  ALTER TABLE student 
		  postgres-# ADD COLUMN marks_in_percentage FLOAT ;
	output:	  ALTER TABLE

roll_number | first_name | last_name | gender | date_of_birth |         email         | marks_in_percentage | address | height 
-------------+------------+-----------+--------+---------------+-----------------------+---------------------+---------+--------
           1 | Anne       | smith     | FEMALE | 1998-01-09    | anne@gmail.com        |                     |         |       
           2 | kunal      | kumar     | MALE   | 1999-01-09    | kunalk@gmail.com      |                     |         |       
           3 | Anisha     | kumari    | FEMALE | 1999-12-08    | k.anisha@gmail.com    |                     |         |       
           4 | Parul      | sharma    | FEMALE | 1997-12-01    | parul.s@gmail.com     |                     |         |       
           5 | kishor     | sharma    | MALE   | 1999-08-08    | s.kishor@gmail.com    |                     |         |       
           6 | shefali    | Malhotra  | FEMALE | 1999-11-08    | shef@gmail.com        |                     |         |       
           7 | parakriti  | agarwal   | FEMALE | 1995-03-08    | prak.a@gmail.com      |                     |         |       
           8 | rohit      | sharma    | MALE   | 1996-10-08    | rohits@gmail.com      |                     |         |       
           9 | prithvi    | chouhan   | MALE   | 1999-12-28    | prithviraj@gmail.com  |                     |         |       
          10 | Agni       | chouhan   | FEMALE | 1999-02-28    | agni@gmail.com        |                     |         |       
          11 | karan      | kashyap   | MALE   | 1998-01-07    |                       |                     |         |       
          12 | kiran      | prajapati | FEMALE | 1998-12-07    | kiran.p@gmail.com     |                     |         |       
          13 | tarushee   | kumar     | FEMALE | 1996-02-07    | tarusee.k@gmail.com   |                     |         |       
          14 | priyal     | sobti     | FEMALE | 1998-03-30    | priyalsobti@gmail.com |                     |         |       
          15 | laeba      | heider    | FEMALE | 1998-02-28    | laeba@gmail.com       |                     |         |       
          16 | anurag     | kasyap    | MALE   | 1998-02-02    | anurag@gmail.com      |                     |         |       
          17 | poonam     | pawar     | FEMALE | 1999-02-02    | poonam@gmail.com      |                     |         |       
          18 | mansi      | seshodiya | FEMALE | 2000-07-17    | mansi@gmail.com       |                     |         |       
          19 | yashaswini | seshodiya | FEMALE | 2001-12-28    | yashi@gmail.com       |                     |         |       
          20 | diksha     | kapoor    | FEMALE | 1999-12-28    | diksha@gmail.com      |                     |         |       
          21 | rohan      |           | MALE   | 1996-01-28    | rohan@gmail.com       |                     |         |       
          22 | roshni     | valya     | FEMALE | 1999-03-19    | roshni@gmail.com      |                     |         |       
(22 rows)


34. UPDATE and SET : is is used to update the table content.
	
	syntax :UPDATE student
		SET marks_in_percentage = 99.1,
		address ='kerala',
		height = 5.6
		WHERE roll_number = 22;
		UPDATE 1

	output : 
postgres=# SELECT * FROM student;
roll_number | first_name | last_name | gender | date_of_birth |         email         | marks_in_percentage |  address  | height 
-------------+------------+-----------+--------+---------------+-----------------------+---------------------+-----------+--------
           1 | Anne       | smith     | FEMALE | 1998-01-09    | anne@gmail.com        |                  89 | Delhi     |    5.1
           2 | kunal      | kumar     | MALE   | 1999-01-09    | kunalk@gmail.com      |                  90 | Delhi     |    5.2
           3 | Anisha     | kumari    | FEMALE | 1999-12-08    | k.anisha@gmail.com    |                  91 | Noida     |      5
           4 | Parul      | sharma    | FEMALE | 1997-12-01    | parul.s@gmail.com     |                  90 | Faridabad |    5.5
           5 | kishor     | sharma    | MALE   | 1999-08-08    | s.kishor@gmail.com    |                  80 | Delhi     |    4.9
           6 | shefali    | Malhotra  | FEMALE | 1999-11-08    | shef@gmail.com        |                  75 | Gurgaon   |    5.3
           7 | parakriti  | agarwal   | FEMALE | 1995-03-08    | prak.a@gmail.com      |                  95 | Delhi     |    5.8
           8 | rohit      | sharma    | MALE   | 1996-10-08    | rohits@gmail.com      |                  94 | Delhi     |    5.6
           9 | prithvi    | chouhan   | MALE   | 1999-12-28    | prithviraj@gmail.com  |                  97 | Kerala    |      5
          10 | Agni       | chouhan   | FEMALE | 1999-02-28    | agni@gmail.com        |                  98 | Assam     |      5
          11 | karan      | kashyap   | MALE   | 1998-01-07    | karan@gmail.com       |                  99 | Faridabad |    5.1
          12 | kiran      | prajapati | FEMALE | 1998-12-07    | kiran.p@gmail.com     |                  75 | Faridabad |    5.6
          13 | tarushee   | kumar     | FEMALE | 1996-02-07    | tarusee.k@gmail.com   |                  65 | Faridabad |    5.7
          14 | priyal     | sobti     | FEMALE | 1998-03-30    | priyalsobti@gmail.com |                  60 | Gurgaon   |      5
          15 | laeba      | heider    | FEMALE | 1998-02-28    | laeba@gmail.com       |                  80 | Kerala    |    5.6
          16 | anurag     | kasyap    | MALE   | 1998-02-02    | anurag@gmail.com      |                  88 | Kerala    |    5.7
          17 | poonam     | pawar     | FEMALE | 1999-02-02    | poonam@gmail.com      |                  89 | Punjab    |    5.9
          18 | mansi      | seshodiya | FEMALE | 2000-07-17    | mansi@gmail.com       |                  95 | Noida     |      5
          19 | yashaswini | seshodiya | FEMALE | 2001-12-28    | yashi@gmail.com       |                  94 | Noida     |      5
          20 | diksha     | kapoor    | FEMALE | 1999-12-28    | diksha@gmail.com      |                  78 | Gurgaon   |    5.5
          21 | rohan      | choudhary | MALE   | 1996-01-28    | rohan@gmail.com       |                99.2 | Delhi     |    5.5
          22 | roshni     | valya     | FEMALE | 1999-03-19    | roshni@gmail.com      |                99.1 | kerala    |    5.6
(22 rows)

35. MAX() : return the maximum value
	

	syntax :SELECT MAX(marks_in_percentage) FROM student;
		max  
		------
 		99.2
		(1 row)

36.MIN() : return the minimum value.
	
	syntax :SELECT MIN(marks_in_percentage) FROM student;
 		min 
		-----
  		60
		(1 row)


37.AVG() : use to calculate the average .

	syntax :SELECT AVG(height) FROM student;
       	avg        	
	------------------
	 5.34545454545455
	(1 row)

38.ROUND() : round of the value.

	syntax : SELECT ROUND( AVG(height)) FROM student;
		 round 
		-------
 		    5
		(1 row)

39.SUM () :  used to accumulate the numbers.

	syntax : SELECT SUM(height) FROM student;
  		sum  
		-------
		 117.6
		(1 row)

---------------------------------------------12TH OCT--------------------------------------------------------

40.COALESCE : used to fill the empty space with the default values.
	syntax : SELECT COALESCE(email , 'email is not valid') FROM student;


41. TIME And Date : for time and date .

	syntax : 

SELECT NOW()::DATE;
    now     
------------
 2021-10-12
(1 row)

postgres=# SELECT NOW()::TIME;
       now       
-----------------
 10:59:31.032672
(1 row)


42.Age(): age function give the detail age information.
	syntax :SELECT first_name ,last_name  , gender,date_of_birth ,AGE(NOW(),date_of_birth) AS age FROM student;
 first_name | last_name | gender | date_of_birth |                   age                    
------------+-----------+--------+---------------+------------------------------------------
 Anne       | smith     | FEMALE | 1998-01-09    | 23 years 9 mons 3 days 11:08:40.836772
 kunal      | kumar     | MALE   | 1999-01-09    | 22 years 9 mons 3 days 11:08:40.836772
 Anisha     | kumari    | FEMALE | 1999-12-08    | 21 years 10 mons 4 days 11:08:40.836772
 Parul      | sharma    | FEMALE | 1997-12-01    | 23 years 10 mons 11 days 11:08:40.836772
 kishor     | sharma    | MALE   | 1999-08-08    | 22 years 2 mons 4 days 11:08:40.836772
 shefali    | Malhotra  | FEMALE | 1999-11-08    | 21 years 11 mons 4 days 11:08:40.836772
 parakriti  | agarwal   | FEMALE | 1995-03-08    | 26 years 7 mons 4 days 11:08:40.836772
 rohit      | sharma    | MALE   | 1996-10-08    | 25 years 4 days 11:08:40.836772
 prithvi    | chouhan   | MALE   | 1999-12-28    | 21 years 9 mons 15 days 11:08:40.836772
 Agni       | chouhan   | FEMALE | 1999-02-28    | 22 years 7 mons 12 days 11:08:40.836772
 kiran      | prajapati | FEMALE | 1998-12-07    | 22 years 10 mons 5 days 11:08:40.836772
 tarushee   | kumar     | FEMALE | 1996-02-07    | 25 years 8 mons 5 days 11:08:40.836772
 priyal     | sobti     | FEMALE | 1998-03-30    | 23 years 6 mons 13 days 11:08:40.836772
 laeba      | heider    | FEMALE | 1998-02-28    | 23 years 7 mons 12 days 11:08:40.836772
 anurag     | kasyap    | MALE   | 1998-02-02    | 23 years 8 mons 10 days 11:08:40.836772
 poonam     | pawar     | FEMALE | 1999-02-02    | 22 years 8 mons 10 days 11:08:40.836772
 mansi      | seshodiya | FEMALE | 2000-07-17    | 21 years 2 mons 26 days 11:08:40.836772
 yashaswini | seshodiya | FEMALE | 2001-12-28    | 19 years 9 mons 15 days 11:08:40.836772
 diksha     | kapoor    | FEMALE | 1999-12-28    | 21 years 9 mons 15 days 11:08:40.836772
 roshni     | valya     | FEMALE | 1999-03-19    | 22 years 6 mons 24 days 11:08:40.836772
 karan      | kashyap   | MALE   | 1998-01-07    | 23 years 9 mons 5 days 11:08:40.836772
 rohan      | choudhary | MALE   | 1996-01-28    | 25 years 8 mons 15 days 11:08:40.836772
(22 rows)

43. DELETE : for delete a records.
	syntax : DELETE FROM student WHERE roll_number = 22;
		DELETE 1
		SELECT * FROM student;
 roll_number | first_name | last_name | gender | date_of_birth |         email         | marks_in_percentage |  address  | height 
-------------+------------+-----------+--------+---------------+-----------------------+---------------------+-----------+--------
           1 | Anne       | smith     | FEMALE | 1998-01-09    | anne@gmail.com        |                  89 | Delhi     |    5.1
           2 | kunal      | kumar     | MALE   | 1999-01-09    | kunalk@gmail.com      |                  90 | Delhi     |    5.2
           3 | Anisha     | kumari    | FEMALE | 1999-12-08    | k.anisha@gmail.com    |                  91 | Noida     |      5
           4 | Parul      | sharma    | FEMALE | 1997-12-01    | parul.s@gmail.com     |                  90 | Faridabad |    5.5
           5 | kishor     | sharma    | MALE   | 1999-08-08    | s.kishor@gmail.com    |                  80 | Delhi     |    4.9
           6 | shefali    | Malhotra  | FEMALE | 1999-11-08    | shef@gmail.com        |                  75 | Gurgaon   |    5.3
           7 | parakriti  | agarwal   | FEMALE | 1995-03-08    | prak.a@gmail.com      |                  95 | Delhi     |    5.8
           8 | rohit      | sharma    | MALE   | 1996-10-08    | rohits@gmail.com      |                  94 | Delhi     |    5.6
           9 | prithvi    | chouhan   | MALE   | 1999-12-28    | prithviraj@gmail.com  |                  97 | Kerala    |      5
          10 | Agni       | chouhan   | FEMALE | 1999-02-28    | agni@gmail.com        |                  98 | Assam     |      5
          12 | kiran      | prajapati | FEMALE | 1998-12-07    | kiran.p@gmail.com     |                  75 | Faridabad |    5.6
          13 | tarushee   | kumar     | FEMALE | 1996-02-07    | tarusee.k@gmail.com   |                  65 | Faridabad |    5.7
          14 | priyal     | sobti     | FEMALE | 1998-03-30    | priyalsobti@gmail.com |                  60 | Gurgaon   |      5
          15 | laeba      | heider    | FEMALE | 1998-02-28    | laeba@gmail.com       |                  80 | Kerala    |    5.6
          16 | anurag     | kasyap    | MALE   | 1998-02-02    | anurag@gmail.com      |                  88 | Kerala    |    5.7
          17 | poonam     | pawar     | FEMALE | 1999-02-02    | poonam@gmail.com      |                  89 | Punjab    |    5.9
          18 | mansi      | seshodiya | FEMALE | 2000-07-17    | mansi@gmail.com       |                  95 | Noida     |      5
          19 | yashaswini | seshodiya | FEMALE | 2001-12-28    | yashi@gmail.com       |                  94 | Noida     |      5
          20 | diksha     | kapoor    | FEMALE | 1999-12-28    | diksha@gmail.com      |                  78 | Gurgaon   |    5.5
          11 | karan      | kashyap   | MALE   | 1998-01-07    | karan@gmail.com       |                  99 | Faridabad |    5.1
          21 | rohan      | choudhary | MALE   | 1996-01-28    | rohan@gmail.com       |                99.2 | Delhi     |    5.5
(21 rows)


=================================================KEY CONSTRAINTS=====================================

44.Foreign key : A FOREIGN KEY is a field (or collection of fields) in one table, that refers to the PRIMARY KEY in another table.
The table with the foreign key is called the child table, and the table with the primary key is called the referenced or parent tab

	syntax : if in the case of create table 
		
		CREATE TABLE car (
    				car_id int NOT NULL,
   			        OrderNumber int NOT NULL,
                                PersonID int,
                                PRIMARY KEY (car_id),
                                FOREIGN KEY (car_id_fk) REFERENCES Persons(ID)
				);

		if case of ALTER TABLE 
		
		 ALTER TABLE car 
		 ADD car_id_fk BIGINT REFERENCES person(id);

      Output: 
postgres=# SELECT * FROM car;
 car_id |    car_name    | cost_lakh | purchase_address 
--------+----------------+-----------+------------------
      1 | Ford           |        15 | Delhi
      2 | Mercedese Benz |        20 | Gurgaon
      3 | Toyota         |         5 | Faridabad
      4 | Nisan          |         7 | Faridabad
      5 | Nexa Baleno    |         8 | Uttar Pradesh
      6 | BMW            |        17 | Uttar Pradesh
      7 | Nano           |         5 | Delhi
      8 | Dustor         |         6 | Delhi
      9 | Swift          |         5 | Faridabad
     10 | valkswagen     |         9 | Faridabad
(10 rows)

postgres=# SELECT * FROM person;
 id | first_name | last_name | gender | date_of_birth |         email         | car_id_fk 
----+------------+-----------+--------+---------------+-----------------------+-----------
  1 | Aman       | Chouhan   | MALE   | 1997-12-28    | amanchouhan@gmail.com |         1
  2 | Ankansha   | sharma    | FEMALE | 1998-11-28    | niharika@gmail.com    |         2
  3 | Niharika   | kumari    | FEMALE | 1999-09-20    | kunal@gmail.com       |         3
  4 | Kunal      | kumar     | MALE   | 1999-09-11    | neha@gmail.com        |         4
  5 | Neha       | Nagar     | FEMALE | 1997-12-28    | neha@gmail.com        |         5
  6 | kiran      | sharma    | FEMALE | 1998-12-24    | kiran@gmail.com       |         6
  7 | krshna     | kapoor    | MALE   | 1995-08-24    | krish@gmail.com       |         7
  8 | Pawan      | khanna    | MALE   | 1994-06-20    | pawan@gmail.com       |         8
  9 | Thomas     | smith     | MALE   | 1990-04-20    | thomas@gmail.com      |         9
 10 | Brijesh    | Yadav     | MALE   | 1992-03-21    | brij@gmail.com        |        10
(10 rows)

postgres=# \d person
                                       Table "public.person"
    Column     |          Type          | Collation | Nullable |              Default               
---------------+------------------------+-----------+----------+------------------------------------
 id            | bigint                 |           | not null | nextval('person_id_seq'::regclass)
 first_name    | character varying(50)  |           | not null | 
 last_name     | character varying(50)  |           | not null | 
 gender        | character varying(7)   |           | not null | 
 date_of_birth | date                   |           | not null | 
 email         | character varying(150) |           |          | 
 car_id_fk     | bigint                 |           |          | 
Indexes:
    "person_pkey" PRIMARY KEY, btree (id)
Foreign-key constraints:
    "person_car_id_fk_fkey" FOREIGN KEY (car_id_fk) REFERENCES person(id)
Referenced by:
    TABLE "person" CONSTRAINT "person_car_id_fk_fkey" FOREIGN KEY (car_id_fk) REFERENCES person(id)


====================================================JOIN INNER ============================

45.INNER JOIN : The INNER JOIN keyword selects records that have matching values in both tables.
	
	SYNTAX :  SELECT * FROM person JOIN car ON person.car_id_fk = car.car_id;


SELECT * FROM car;
 car_id |    car_name    | cost_lakh | purchase_address 
--------+----------------+-----------+------------------
      1 | Ford           |        15 | Delhi
      2 | Mercedese Benz |        20 | Gurgaon
      3 | Toyota         |         5 | Faridabad
      4 | Nisan          |         7 | Faridabad
      5 | Nexa Baleno    |         8 | Uttar Pradesh
      6 | BMW            |        17 | Uttar Pradesh
      7 | Nano           |         5 | Delhi
      8 | Dustor         |         6 | Delhi
      9 | Swift          |         5 | Faridabad
     10 | valkswagen     |         9 | Faridabad
(10 rows)

SELECT * FROM person;
 id | first_name | last_name | gender | date_of_birth |         email         | car_id_fk 
----+------------+-----------+--------+---------------+-----------------------+-----------
  1 | Aman       | Chouhan   | MALE   | 1997-12-28    | amanchouhan@gmail.com |         1
  2 | Ankansha   | sharma    | FEMALE | 1998-11-28    | niharika@gmail.com    |         2
  3 | Niharika   | kumari    | FEMALE | 1999-09-20    | kunal@gmail.com       |         3
  4 | Kunal      | kumar     | MALE   | 1999-09-11    | neha@gmail.com        |         4
  5 | Neha       | Nagar     | FEMALE | 1997-12-28    | neha@gmail.com        |         5
  6 | kiran      | sharma    | FEMALE | 1998-12-24    | kiran@gmail.com       |         6
  7 | krshna     | kapoor    | MALE   | 1995-08-24    | krish@gmail.com       |         7
  8 | Pawan      | khanna    | MALE   | 1994-06-20    | pawan@gmail.com       |         8
  9 | Thomas     | smith     | MALE   | 1990-04-20    | thomas@gmail.com      |         9
 10 | Brijesh    | Yadav     | MALE   | 1992-03-21    | brij@gmail.com        |        10
(10 rows)

postgres=# SELECT * FROM person JOIN car ON person.car_id_fk = car.car_id;
 id | first_name | last_name | gender | date_of_birth |         email         | car_id_fk | car_id |    car_name    | cost_lakh | purchase_address 
----+------------+-----------+--------+---------------+-----------------------+-----------+--------+----------------+-----------+------------------
  1 | Aman       | Chouhan   | MALE   | 1997-12-28    | amanchouhan@gmail.com |         1 |      1 | Ford           |        15 | Delhi
  2 | Ankansha   | sharma    | FEMALE | 1998-11-28    | niharika@gmail.com    |         2 |      2 | Mercedese Benz |        20 | Gurgaon
  3 | Niharika   | kumari    | FEMALE | 1999-09-20    | kunal@gmail.com       |         3 |      3 | Toyota         |         5 | Faridabad
  4 | Kunal      | kumar     | MALE   | 1999-09-11    | neha@gmail.com        |         4 |      4 | Nisan          |         7 | Faridabad
  5 | Neha       | Nagar     | FEMALE | 1997-12-28    | neha@gmail.com        |         5 |      5 | Nexa Baleno    |         8 | Uttar Pradesh
  6 | kiran      | sharma    | FEMALE | 1998-12-24    | kiran@gmail.com       |         6 |      6 | BMW            |        17 | Uttar Pradesh
  7 | krshna     | kapoor    | MALE   | 1995-08-24    | krish@gmail.com       |         7 |      7 | Nano           |         5 | Delhi
  8 | Pawan      | khanna    | MALE   | 1994-06-20    | pawan@gmail.com       |         8 |      8 | Dustor         |         6 | Delhi
  9 | Thomas     | smith     | MALE   | 1990-04-20    | thomas@gmail.com      |         9 |      9 | Swift          |         5 | Faridabad
 10 | Brijesh    | Yadav     | MALE   | 1992-03-21    | brij@gmail.com        |        10 |     10 | valkswagen     |         9 | Faridabad
(10 rows)




